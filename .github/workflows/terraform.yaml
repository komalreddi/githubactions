name: Build and Deploy to ECR (Staging â†’ Production)

on:
  push:
    branches:
      - main  # or any branch you want to watch

jobs:
  build-and-deploy-staging:
    name: Build & Deploy to Staging
    runs-on: ubuntu-latest
    environment: stage  # ðŸ‘ˆ auto deploy
    outputs:
      image_tag: ${{ steps.meta.outputs.image_tag }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set image tag based on Git commi
        id: meta
        run: echo "image_tag=sha-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Docker image to Staging
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ steps.meta.outputs.image_tag }}
        run: |
          cd redis
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy-to-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-deploy-staging
    environment: production  # ðŸ‘ˆ manual approval required here

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Tag and Push Docker image to Production
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ needs.build-and-deploy-staging.outputs.image_tag }}
        run: |
          # Pull image from staging
          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          # Retag for production
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:prod-$IMAGE_TAG
          # Push to production tag
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:prod-$IMAGE_TAG
